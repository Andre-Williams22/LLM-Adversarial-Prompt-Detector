# Cloud Build configuration for automated deployment
# Builds and deploys to Cloud Run automatically

steps:
  # Step 1: Copy the Cloud Run specific dockerignore
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'cp .dockerignore.cloudrun .dockerignore']
  
  # Step 2: Build the Docker image (now using root Dockerfile)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:$BUILD_ID',
      '-t', 'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:latest',
      '.'
    ]

  # Step 3: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:$BUILD_ID'
    ]
  
  # Step 4: Also push the latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:latest'
    ]

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'adversarial-prompt-detector',
      '--image', 'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:$BUILD_ID',
      '--platform', 'managed',
      '--region', 'us-west1',
      '--allow-unauthenticated',
      '--memory', '32Gi',
      '--cpu', '8',
      '--concurrency', '100',
      '--max-instances', '12',
      '--min-instances', '1',
      '--timeout', '3600',
      '--cpu-boost',
      '--port', '80',
      '--cpu-boost',
      '--timeout', '3600',
      '--startup-probe-timeout', '600',
      '--startup-probe-period', '30',
      '--startup-probe-failure-threshold', '20',
      '--set-env-vars', 'TOKENIZERS_PARALLELISM=false,PYTORCH_ENABLE_MPS_FALLBACK=1,HF_HUB_DISABLE_SYMLINKS_WARNING=1,PORT=80'
    ]

# Build options
options:
  # Use high-performance machine for faster builds
  machineType: 'E2_HIGHCPU_8'
  # Enable Docker layer caching
  env:
    - 'DOCKER_BUILDKIT=1'

# Build timeout
timeout: '3600s'

# Substitutions for flexibility
substitutions:
  _REGION: 'us-west1'
  _SERVICE_NAME: 'adversarial-prompt-detector'

# Images to store in Artifact Registry
images:
  - 'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:$BUILD_ID'
  - 'us-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/llm-adversarial-prompt-detector/adversarial-prompt-detector:latest'
